# SPDX-FileCopyrightText: 2022 Contributors to the Power Grid Model project <dynamic.grid.calculation@alliander.com>
#
# SPDX-License-Identifier: MPL-2.0

[build-system]
requires = [
    "setuptools",
    "wheel",
    "pybuild-header-dependency",
]
build-backend = "setuptools.build_meta"

[project]
name = "power-grid-model"
authors = [{ name = "Alliander Dynamic Grid Calculation", email = "dynamic.grid.calculation@alliander.com" }]
description = "Python/C++ library for distribution power system analysis"
readme = "README.md"
license = { text = "MPL-2.0" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: C++",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
]
dynamic = ["version"]


[project.optional-dependencies]
dev = [
    "pre-commit",
    "pylint",
    "pytest",
    "pytest-cov",
    "dataclasses_json",
    "jinja2",
]
doc = [
    "sphinx",
    "breathe",
    "myst_nb",
    "sphinx_rtd_theme",
    "readthedocs-sphinx-search",
    "sphinx-hoverxref",
    "sphinxcontrib-mermaid",
    "numpydoc",
    "pandas",
    "gitpython",
]

[project.urls]
Home-page = "https://lfenergy.org/projects/power-grid-model/"
GitHub = "https://github.com/PowerGridModel/power-grid-model"
Documentation = "https://power-grid-model.readthedocs.io/en/stable/"
Mailing-list = "https://lists.lfenergy.org/g/powergridmodel"
Discussion = "https://github.com/orgs/PowerGridModel/discussions"

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools.dynamic]
version = {file = "PYPI_VERSION"}

[tool.pytest.ini_options]
testpaths = ["tests/unit"]
addopts = ["--cov=power_grid_model", "--cov-report", "term", "--cov-report", "html:python_cov_html", "--cov-report", "xml:python_coverage.xml", "--cov-fail-under=95"]

[tool.black]
line-length = 120
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 120

[tool.pylint]
max-line-length = 120

[tool.mypy]
follow_imports = "silent"
ignore_missing_imports = true
show_column_numbers = true
non_interactive = true
install_types = true


# CI build options
[tool.cibuildwheel]
build-frontend = "build"
build-verbosity = 1
test-extras = ["dev"]
test-command = "pytest {package}/tests"
# we do not support 
#    PyPy
#    musllinux when python < 3.9
#    musllinux in aarch64

# we disable musllinux in cibuildwheel because there is not support for musllinux 1.2 yet
# we build separately at this moment
skip = ["pp*", "*musllinux*"]
# TODO restore this
# skip = ["pp*", "cp38-musllinux*", "*-musllinux_aarch64"]

[tool.cibuildwheel.linux]
archs = ["x86_64", "aarch64"]
# force auditwheel to use manylinux_2_24 to support Amazon Linux 2 when building in manylinux_2_28
repair-wheel-command = "auditwheel repair --plat ${AUDITWHEEL_PLAT//2_28/2_24} -w {dest_dir} {wheel}"
environment = { CC="gcc", CXX="g++" }
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
musllinux-x86_64-image = "musllinux_1_1"

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]
environment = { CC="clang", CXX="clang++" }
# Skip trying to test arm64 builds on Intel Macs
test-skip = ["*-macosx_arm64", "*-macosx_universal2:arm64"]

[tool.cibuildwheel.windows]
archs = ["AMD64"]
